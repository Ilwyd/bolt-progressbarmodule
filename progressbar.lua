local ProgressBarModule = {
    texturedata = {
        primarybar = { 
            data = '\x10\x6d\x6c\xff\x1b\xd4\xd2\xff\x3b\xff\xfc\xff\x1c\xff\xfc\xff\x4a\xff\xfd\xff\x64\xff\xfd\xff\x69\xff\xfd\xff\x69\xff\xfd\xff\x69\xff\xfd\xff\x73\xff\xfd\xff\x73\xff\xfd\xff\x7b\xff\xfd\xff\x7b\xff\xfd\xff\xa1\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x93\xff\xfe\xff\x64\xff\xfd\xff\x1d\xc6\xc4\xff\x10\x6d\x6c\xff',
            offset = 3,
            width = 56,
            height = 5
        },
        secondarybar = { 
            data = '\x22\x29\x00\xff\xc6\x63\x00\xff\xd5\x52\x00\xff\xcd\x4e\x00\xff\xcd\x4e\x00\xff\xcd\x4e\x00\xff\xcd\x4e\x00\xff\xcd\x4e\x00\xff\xca\x51\x00\xff\xca\x51\x00\xff\xca\x51\x00\xff\xca\x51\x00\xff\xca\x51\x00\xff\xca\x51\x00\xff\xc6\x63\x00\xff\xca\x51\x00\xff\xc7\x5e\x00\xff\xc6\x63\x00\xff\xc4\x6e\x00\xff\xc4\x6e\x00\xff\xc3\x74\x00\xff\xc2\x7b\x00\xff\xc2\x7b\x00\xff\xc2\x7b\x00\xff\xc2\x7b\x00\xff\xc2\x83\x00\xff\xc2\x83\x00\xff\xc0\x8b\x00\xff\xc2\x83\x00\xff\xc2\x83\x00\xff\xc0\x8b\x00\xff\xc0\x8b\x00\xff\xc0\x8b\x00\xff\xc0\x8b\x00\xff\xb9\x99\x00\xff\xbb\x95\x00\xff\xbb\x95\x00\xff\xb9\x99\x00\xff\xb9\x99\x00\xff\xb9\x99\x00\xff\xb5\x9d\x00\xff\xb5\x9d\x00\xff\xb5\x9d\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb3\xa4\x00\xff\xb5\x9d\x00\xff\x7b\x8e\x00\xff\x22\x29\x00\xff',
            offset = 3,
            width = 56,
            height = 7
        }
    },
    lastValue = {
        primarybar = nil,
        secondarybar = nil
    },
    Bars = {
        PRIMARY = "primarybar", -- Light blue bar (Smithing, mining progress, etc.)
        SECONDARY = "secondarybar" -- Orange bar (Smithing heat, mining stamina, etc.)
    }
}
local MAX_DIFF = 56 -- Bar is always 56 pixels wide

-- Compatibility fix: unpack is deprecated, but table.unpack currently causes an error
table.unpack = table.unpack or unpack

-- Gets the current percentage of the provided bar
-- Values won't be exact (i.e adrenaline), but a close approximation
function ProgressBarModule:findBarPercentage(event, bar)
    local vertxposes = {}
    for i = 1, event:vertexcount() do
        local ax, ay, aw, ah = event:vertexatlasdetails(i)
        local bartexturedata = self.texturedata[bar]

        if not (aw == bartexturedata.width and ah == bartexturedata.height and event:texturecompare(ax, ay + bartexturedata.offset, bartexturedata.data)) then
            goto continue
        end

        vertxposes[#vertxposes + 1], _ = event:vertexxy(i)
        ::continue::
    end

    if next(vertxposes) ~= nil then
        local barrightposx = math.max(table.unpack(vertxposes))
        local barleftposx = math.min(table.unpack(vertxposes))
        local bardiff = barrightposx - barleftposx
        print(math.ceil((bardiff / MAX_DIFF) * 100))
        self.lastValue[bar] = math.ceil((bardiff / MAX_DIFF) * 100)
    end
end


return ProgressBarModule